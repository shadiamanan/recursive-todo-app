{
  "version": 3,
  "sources": ["empty-module:../utils/appwrite.server", "empty-module:@remix-run/node", "../../../app/routes/signup.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup.tsx\");\n  import.meta.hot.lastModified = \"1756747343429.3113\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { account } from \"../utils/appwrite.server\";\nimport { json, redirect } from \"@remix-run/node\";\n\n// Server-side action (simplified)\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  try {\n    await account.create(\"unique()\", email, password);\n    return redirect(\"/todolist\");\n  } catch (err) {\n    let message = \"Signup failed\";\n    let parsed = null;\n    try {\n      parsed = JSON.parse(err.response);\n      if (parsed.message) message = parsed.message;\n    } catch {}\n    if (err.code === 409 || parsed && parsed.message.includes(\"already exists\")) {\n      message = \"User with this email already exists.\";\n    }\n    return json({\n      error: message\n    }, {\n      status: 400\n    });\n  }\n}\nexport default function Signup() {\n  _s();\n  const actionData = useActionData();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return <div style={{\n    minHeight: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"linear-gradient(to right, #4facfe, #00f2fe)\",\n    fontFamily: \"Arial, sans-serif\"\n  }}>\r\n      <div style={{\n      background: \"white\",\n      padding: \"40px\",\n      borderRadius: \"12px\",\n      boxShadow: \"0 10px 25px rgba(0,0,0,0.2)\",\n      width: \"350px\"\n    }}>\r\n        <h2 style={{\n        textAlign: \"center\",\n        marginBottom: \"20px\",\n        color: \"#333\"\n      }}>Sign Up</h2>\r\n\r\n        {actionData?.error && <p style={{\n        color: \"red\",\n        textAlign: \"center\",\n        marginBottom: \"15px\"\n      }}>\r\n            {actionData.error}\r\n          </p>}\r\n\r\n        <Form method=\"post\">\r\n          <div style={{\n          marginBottom: \"15px\"\n        }}>\r\n            <label style={{\n            display: \"block\",\n            marginBottom: \"5px\",\n            fontWeight: \"bold\"\n          }}>\r\n              Email:\r\n            </label>\r\n            <input type=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} style={{\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\"\n          }} required />\r\n          </div>\r\n\r\n          <div style={{\n          marginBottom: \"20px\"\n        }}>\r\n            <label style={{\n            display: \"block\",\n            marginBottom: \"5px\",\n            fontWeight: \"bold\"\n          }}>\r\n              Password:\r\n            </label>\r\n            <input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} style={{\n            width: \"100%\",\n            padding: \"10px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\"\n          }} required />\r\n          </div>\r\n\r\n          <button type=\"submit\" style={{\n          width: \"100%\",\n          padding: \"12px\",\n          background: \"#4facfe\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          fontWeight: \"bold\",\n          cursor: \"pointer\"\n        }}>\r\n            Sign Up\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </div>;\n}\n_s(Signup, \"CdoIANG2r1f1lhtpfKh4cmrvNpE=\", false, function () {\n  return [useActionData];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
